/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.7 public/models/london.gltf
*/

import React, { useContext, useRef, useState } from 'react'
import { Decal, MeshDistortMaterial, MeshWobbleMaterial, useGLTF, useTexture } from '@react-three/drei'
import { TextElementContext } from '../assets/TextElementContext';

export function London() {
  const { hovered, projectHovered } = useContext(TextElementContext);
  const { nodes, materials } = useGLTF('models/london.gltf');

  const textureEcho = useTexture("/images/Echo/heroimage-1.jpeg");
  const textureDeepFacade = useTexture("/images/DeepFacade/webapp.jpg");


  let texture = null;
  let rotation = [null];
  let scale = [null];
  if (projectHovered === "echo") {
    texture = textureEcho;
    rotation = [0, 2.3, 0];
    scale = [3.5, 3.5, 3.5];
  }
  else if (projectHovered === "deepfacade") {
    texture = textureDeepFacade;
    rotation = [0, 3.55, 0];
    scale = [4, 4, 4];
  }

  return (
    <group dispose={null}>
      <mesh geometry={nodes.Cube008.geometry}
        position={[-0.547, 1.38, 1.724]} rotation={[0, -Math.PI / 4, 0]} scale={1.206} castShadow receiveShadow>
        {texture && (
          <>
            <meshBasicMaterial transparent opacity={0} />
            <Decal
              position={[0, 0, 0]}
              rotation={rotation}
              scale={scale}
            >
              {/* <MeshWobbleMaterial factor={1} speed={2} map={texture} polygonOffset polygonOffsetFactor={-1} /> */}
              <MeshDistortMaterial distort={0.3} speed={2} map={texture} polygonOffset polygonOffsetFactor={-1} />
            </Decal>

          </>
        )}
        {!texture && <meshBasicMaterial attach="material" {...materials['Material.002']} />}
      </mesh>
    </group>
  );
}
useGLTF.preload('models/london.gltf')