/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.7 public/models/colorado.gltf
*/

import React, { useLayoutEffect, useRef } from 'react';
import { useGLTF, useScroll } from '@react-three/drei';
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";


export const FLOOR_HEIGHT = 2.3;
export const NB_FLOORS = 3;

export function Colorado(props) {
  const coloradoRef = useRef();
  const timeline = useRef();

  const scroll = useScroll();

  useFrame(() => {
    timeline.current.seek(scroll.offset * timeline.current.duration());
  });

  useLayoutEffect(() => {
    timeline.current = gsap.timeline();

    //Animation
    timeline.current.to(
      coloradoRef.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
      },
      0
    );

    timeline.current.to(
      Bangkok.current.position,
      {
        duration: 2,
        y: -FLOOR_HEIGHT * (NB_FLOORS - 1),
      },
      0
    );

  }, []);

  const { nodes, materials } = useGLTF('models/colorado.gltf')
  return (
    <group {...props} dispose={null} ref={coloradoRef}>
      <mesh geometry={nodes.Cube006.geometry} material={materials['Material.002']} position={[-2.35, 0.752, -0.072]} rotation={[-Math.PI, Math.PI / 4, -Math.PI]} scale={[-1.206, -0.144, -1.206]} />
    </group>
  )
}

useGLTF.preload('models/colorado.gltf')
