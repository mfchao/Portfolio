/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.7 public/models/cubes.gltf
*/
import React, { useLayoutEffect, useRef } from 'react';
import { useGLTF, useScroll } from '@react-three/drei';
import { useFrame } from "@react-three/fiber";
import gsap from "gsap";


export const DISPLAY_HEIGHT = 3;


export function Cubes(props) {
    const ref = useRef();
    const timeline = useRef();
    const bangkokRef = useRef();
    const coloradoRef = useRef();
    const bostonRef = useRef();
    const londonRef = useRef();

  
    const scroll = useScroll();
  
    useFrame(() => {
      timeline.current.seek(scroll.offset * timeline.current.duration());
    });
  
    useLayoutEffect(() => {
      timeline.current = gsap.timeline();
  
      //Animation
      timeline.current.to(coloradoRef.current.position, {duration: 2, y: DISPLAY_HEIGHT})
                      .to(coloradoRef.current.position, {duration: 2, y: 0});

      timeline.current.to(bangkokRef.current.position, {duration: 2, y: DISPLAY_HEIGHT})
                      .to(bangkokRef.current.position, {duration: 2, y: 0});

      timeline.current.to(londonRef.current.position, {duration: 2, y: DISPLAY_HEIGHT})
                      .to(londonRef.current.position, {duration: 2, y: 0});
      
      timeline.current.to(bostonRef.current.position, {duration: 2, y: DISPLAY_HEIGHT})
                      .to(bostonRef.current.position, {duration: 2, y: 0});
      

      

  
  
    }, []);


  const { nodes, materials } = useGLTF('models/cubes.gltf')
  return (
    <group {...props} dispose={null} ref={ref}>

      <group position={[-0.541, 1.389, -1.874]}>
      <group ref={bangkokRef}>
      <mesh geometry={nodes.Cube005.geometry} material={materials['Material.002']} rotation={[0, -Math.PI / 4, 0]} scale={1.206} />
      </group>
      </group>
      
      <group position={[-2.35, 0.752, -0.072]}>
      <group ref={coloradoRef}>
      <mesh geometry={nodes.Cube006.geometry} material={materials['Material.002']} rotation={[-Math.PI, Math.PI / 4, -Math.PI]} scale={[-1.206, -0.144, -1.206]} />
      </group>
      </group>

      <group position={[1.281, 1.378, -0.061]}>
      <group ref={bostonRef}>
      <mesh geometry={nodes.Cube007.geometry} material={materials['Material.002']} rotation={[0, -Math.PI / 4, 0]} scale={1.206} />
      </group>
      </group>

      <group position={[-0.547, 1.38, 1.724]}>
      <group ref={londonRef}>
      <mesh geometry={nodes.Cube008.geometry} material={materials['Material.002']} rotation={[0, -Math.PI / 4, 0]} scale={1.206} />
      </group>
      </group>

      <mesh geometry={nodes.Cube004.geometry} material={materials['Material.003']} position={[-0.802, 0.006, -0.48]} rotation={[0, -Math.PI / 4, 0]} scale={[3.211, 0.234, 3.055]} />
    </group>
  )
}

useGLTF.preload('models/cubes.gltf')